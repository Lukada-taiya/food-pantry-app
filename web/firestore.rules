rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /needed/{docId} {
      allow read;
    }

    match /users/{userId} {
    allow read: if request.auth != null && request.auth.uid == userId;
    allow update: if request.auth != null && request.auth.uid == userId;
    allow create: if request.auth != null;
    }

    match /delivery/{userId} {
    allow read: if request.auth.token.admin == true;
    allow write: if request.auth.token.admin == true;
    }

    match /deliveryprofile/{userid} {
      allow read, update: if request.auth != null && request.auth.uid == resource.data.userid;
      allow create: if request.auth != null && request.auth.uid == userid;
    }

    match /deliveryprofilestate/{userid} {
      allow read: if request.auth != null && request.auth.uid == userid;
    }

    match /volunteerprofile/{userid} {
      allow read, update: if request.auth != null && (request.auth.uid == userid || request.auth.token.admin == true);
      allow create: if request.auth != null && request.auth.uid == userid;
    }

    match /volunteerprofilestate/{userid} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.userid || request.auth.token.admin == true);
      allow update: if request.auth != null && request.auth.token.admin == true;
      // allow create: if request.auth != null && request.auth.uid == userid;
    }

    match /location/{id} {
      allow read: if request.auth != null && request.auth.token.volunteer == true;
      allow create, update, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /tasktype/{id} {
      allow read: if request.auth != null && request.auth.token.volunteer == true;
      allow create, update, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /window/{id} {
      allow read: if request.auth != null && request.auth.token.volunteer == true;
      allow create, update, delete: if request.auth != null && request.auth.token.admin == true;
    }

    match /window/{id}/attending/{uid} {
      allow read: if request.auth != null && (request.auth.token.volunteer == true || request.auth.token.admin == true);
      allow create, update, delete: if request.auth != null && (request.auth.uid == uid || request.auth.token.admin == true);
    }

    match /{path=**}/attending/{uid} {
      allow read: if request.auth != null && (request.auth.token.admin == true || request.auth.token.volunteer == true);
    }

    match /unavail/{uid}/ua/{id} {
      allow read: if request.auth != null && (request.auth.token.admin == true || request.auth.uid == uid);
      allow create, update, delete: if request.auth != null && (request.auth.uid == uid || request.auth.token.admin == true);
    }
    match /{path=**}/ua/{id} {
      allow read: if request.auth != null && request.auth.token.admin == true;
    }

    match /privacypolicy/{version} {
      allow read;
    }

    match /terms/{version} {
      allow read;
    }

    match /agreements/{name} {
      allow read: if request.auth != null && (request.auth.token.volunteer == true || request.auth.token.pendingvolunteer == true);
    }

    match /signedagreements/{uid}/{agreementname}/{id} {
      allow create: if request.auth != null && request.auth.uid == uid;
      allow read, delete: if request.auth != null && (request.auth.uid == uid || request.auth.token.admin == true);
    }

    match /forms/{formName} {
      allow create, read, update, delete: if request.auth != null && request.auth.token.admin == true;
    }

  }
}
